<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="kryptonRibbonGroupButton23.ImageLarge" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAABb2lDQ1BpY2MAACjPlZE5SwNRFIU/EyXi
        QnBBRC1SqFgkEBTEUmNhEyTECG5NMpkkQhKHmQkitoKNhWAh2rgV/gNtBVsFQVAEESt/gFsjYbwvCSSI
        Fr7hzf04753LnTPgCme1nFUfhFzeNqNTId/c/ILP84KbXtrooj2uWcZEJBLmz/V5R52qtwHVi/+t5qRu
        aVDXKDyqGaYtPC4cXrUNxVvCnVomnhQ+FPabMqDwldITZX5WnC7zu2IzFp0El+rpS9dwooa1jJkTHhLu
        z2ULWmUe9SUten52RmqP7D4sokwRwkeCAstksQlIzUtmv/uCJd80K+LR5G2whimONBnx+kUtSFddakp0
        XZ4sayr3n3laqZHhcveWEDQ8Oc7bAHh2oLjtOF9HjlM8BvcjXOSr/hXJaexD9O2q1n8A3g04u6xqiV04
        34TuByNuxkuSW7YrlYLXU2idh44baFosZ1U55+QeYuvyi65hbx8G5b536RvJ6Gfx42p8xAAAAAlwSFlz
        AAALDAAACwwBP0AiyAAAA3xJREFUWEfFl+1LU2EYxh/oxT6YBn2oDCT6IhgSkRGRUVFJFGZliQgigug2
        deqcmxOnfgiif6VCsq++Y0SIiCK2KIq0NefrNuf71NN1H55b3MrH1hE68OM+O+dcv3O58zIU4n8vmqYJ
        5mlLi5DkYJaBU/s0yae7d56P1qM2PGluFpJy7NRuWCxl+zHhLGe3skCe2y0kegFatra2DE0Kw1nObmWB
        x01NQmKi027i5EYhD5wmdisLPGpsFBITnXhjc9Mw5IHTxG5lgYcul5CYNxCMbGwYhjxwmtmtLPDA6RQS
        cwTBNRQgOgYHtdHx8b+eXUND21nywGlmt7JAjsMhJJZ1fP2rkYhhyAOnhd3KAvftdiGpWENweX3dMOSB
        s4LdygL3bDYhqVjFV7+0trbNy44OLRbe39bdrbX39mqvOjs17/x8VI48cFawW1ngbk2NkFSuIBheXd2m
        c2BAX6cSNPkzrdOJaYZWVrTXXV1ROfLAWcluZYFsq1VIqpZw/UkYCxWI3UYFaFtweTmqDG0jD5xV7FYW
        uFNZKSTWRVz/wNLSb1CB2O1UoL2vT//r6RLs3E8eOK3sVha4ZbEISXUYwbnFxSg6cBmoAM2d+2hb7LH8
        mTxwVrNbWeCmySQk1SHcgDPhsGHIA2c1u5UFrpeVCUlNEMGphQWdt/392gePJ67JWfLAWcNuZYFrpaVC
        UhvAXe0PhXS+Tk/HDWfJA2ctu5UFrpaUCIltHkFfMKjzBjfY+7GxuCZnyQOnjd3KAleKi4WkbhaPkDcQ
        0Pns98cNZ8kDZx27lQUuFxUJiX0Gz/TE3JxOW0+P9m50NK7JWfLAaWe3ssClwkIhqZ9G8PvsrI7H54sb
        zpIHznp2KwtcLCgQEocfL6FvMzM69ILpGxmJa3KWPHA62K0scCE/X0ickwjy3T/m9Wq7sdcTQh44nexW
        FjiflyckDT68Bb9MTenQq7Z3ePiPk4/ZbZIHzgZ2Kwucy80VEtdPBP/l7o/NkAdOF7uVBc5mZwuJ24vg
        Jzx+RiEPnG52KwukZGUJSesP/A54JicNQx44W9mtLHAoKUkcz8wknlGQ+IhH0MikLPnIS35lAfo/9WBi
        ojiakfHcjx+RhPT01gkIjEzykI+8tOxV4BiOOXM4NdWWkJb24kBy8u39mPDVwnsaJO1V4AgOohInQco+
        coJODhJiC/wCz3YJPrKmJEgAAAAASUVORK5CYII=
</value>
  </data>
</root>